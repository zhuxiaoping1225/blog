(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{261:function(a,s,t){"use strict";t.r(s);var e=t(1),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"快速导航"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速导航"}},[a._v("#")]),a._v(" 快速导航")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E5%BF%AB%E9%80%9F%E5%AF%BC%E8%88%AA"}},[a._v("快速导航")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#3%E6%9C%8810%E6%97%A5"}},[a._v("3月10日")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#3%E6%9C%889%E6%97%A5"}},[a._v("3月9日")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#3%E6%9C%884%E6%97%A5"}},[a._v("3月4日")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#3%E6%9C%882%E6%97%A5"}},[a._v("3月2日")])])]),a._v(" "),t("h2",{attrs:{id:"_3月10日"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3月10日"}},[a._v("#")]),a._v(" 3月10日")]),a._v(" "),t("ul",[t("li",[a._v("谈谈你对JVM的理解？")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("答：Java虚拟机（JVM）是运行 Java 字节码的虚拟机。JVM有针对不同系统的特定实现（Windows，Linux，macOS），目的是使用相同的字节\n码，它们都会给出相同的结果。字节码和不同系统的 JVM 实现是 Java 语言“一次编译，随处可以运行”的关键所在，它的作用主要有两个：\n1、管理class字节码文件；2、解释和编译class格式文件\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("ul",[t("li",[a._v("RabbitMQ消息堆积的原因和处理？")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("答：消息堆积的原因主要是消费端消费的速度远小于生产者发消息的速度，导致大量消息在 RabbitMQ 的队列中无法消费；处理方式有：1、对生产者发消息接口进行适当限流（不太推荐，影响用户体验）\n；2、多部署几台消费者实例（推荐） 3、适当增加 prefetch 的数量，让消费端一次多接受一些消息（推荐，可以和第二种方案一起用）\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("ul",[t("li",[a._v("CAS原理？")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("答：CAS是一种无锁算法，CAS有3个操作数，内存值V，旧的预期值A，要修改的新值B。当且仅当预期值A和内存值V相同时，将内存值V修改为B，\n否则什么都不做，需注意ABA问题\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("ul",[t("li",[a._v("HashMap的数据结构？")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("答：jdk7：数组+链表； jdk8: 数组+链表+红黑色\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("ul",[t("li",[a._v("MySQL中的索引的数据结构？")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("答：跟存储引擎有关，InnoDB，b+tree， 文件即是数据文件也是索引文件，而MyISAM，是分开存储的\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("ul",[t("li",[a._v("方法区OOM了是什么原因？")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("答：现象java.lang.OutOfMemoryError: PermGen space/Metaspace \n出现永久代或元空间的溢出的原因可能有如下几种： \n1、在Java7之前，频繁的错误使用String.intern方法；\n2、生成了大量的代理类，导致方法区被撑爆，无法卸载；\n3、应用长时间运行，没有重启\n\n解决方法\n永久代/元空间 溢出的原因比较简单，解决方法有如下几种：\n\n1、检查是否永久代空间或者元空间设置的过小\n2、检查代码中是否存在大量的反射操作\n3、dump之后通过mat检查是否存在大量由于反射生成的代理类\n4、放大招，重启JVM\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br")])]),t("h2",{attrs:{id:"_3月9日"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3月9日"}},[a._v("#")]),a._v(" 3月9日")]),a._v(" "),t("ul",[t("li",[a._v("RabbitMQ如何保证数据幂等?")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("答：生产端增加消息发送表，消费端增加消息处理表 ，并且生产端投递到队列的消息id与消费端这边的消息id一致且唯一，每次根据消息id去消息处理表中查找，判断如果是否\n处理过，如果没有处理则处理，否则什么事都不做；还有一种方案是通过增加数据版本号来保证幂等。\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("ul",[t("li",[a._v("秒杀系统如何防止超卖？")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("答：lua脚本\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("ul",[t("li",[a._v("全局事务如何控制？")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("答：用Seata框架或自定义全局事务控制\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"_3月4日"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3月4日"}},[a._v("#")]),a._v(" 3月4日")]),a._v(" "),t("ul",[t("li",[a._v("Spring Cloud Eureka 与 Nacos的区别？ AP 和AP 、CP？")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("答：Eureka 关注AP， Nacos即关注AP 也关注CP\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("ul",[t("li",[a._v("Spring Cloud 新负载均衡组件LoadBalancer?")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("答：LoadBalancer 的Spring Cloud 新推出的负载均衡组件， 默认轮询，也可以配置为随机\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("ul",[t("li",[a._v("线程池参数？")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("答：有七个参数，分别是核心线程数（corePoolSize）、最大线程数（maximumPoolSize）、空闲线程存活时间（keepAliveTime）、单位（unit）、工作队列（workQueue）、线程工厂（threadFactory）及拒绝策略（handler）\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("ul",[t("li",[a._v("jvm 调优？")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("答：垃圾收集器的选择（可选：G1/CMS）、年轻代中eden与s0、s1的比例设置，老年代的配置，-Xmn(年轻代)、-Xms -Xms (jvm堆)\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("ul",[t("li",[a._v("各消息队列的区别？")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("答：区别如下\nRabbitMQ\tActiveMQ\tRocketMQ\tKafka\tCMQ\n社区/公司\tMozilla Public License\tApache\t阿里巴巴\tApache\t腾讯\n开发语言\tErlang\tJava\tJava\tScala & Java\t应该是C++\n客户端语言\t多语言\t多语言\tJava，C++\tJava为主，语言无关\t多语言\n协议支持\t多协议支持\t多协议支持\t自定义\tTcp之上自定义\t目前HTTP\n消息批量操作\t不支持\t支持\t支持\t支持\t支持\n消息推拉模式\tPull，Push\tPull，Push\tPull，Push\tPull\tPull，Push\n高可用\tMaster/Slave，master提供服务，slave备份\t基于ZooKeeper + LevelDB的MS\t支持多M，多MS，异步复制模式，多M多S模式，同步双写\treplica机制，leader宕机会重新选举\tleader重新选举\n数据可靠性\t可靠\tM/S\t可靠\t可靠\t可靠\n单机吞吐量\t万级\t万级\t低十万级\t高十万级\t高万级\n消息延迟\t微秒级\t-\t-\t毫秒级\t毫秒级\n持久化能力\t内存+文件，堆积量影响生产速率\t内存+文件+数据库\t磁盘文件\t磁盘文件\t磁盘\n是否有序\t单Client有序\t可以有序\t有序\t多Client有序\t单Client有序\n支持事务\t支持\t支持\t支持\t不支持，但是可以通过Low Level API 保证仅消费一次\t不支持\n集群\t支持\t支持\t支持\t支持\t支持\n负载均衡\t支持\t支持\t支持\t支持\t支持\n管理界面\t较好\t一般\t命令行\t官方只有命令行\t较好\n部署方式\t独立\t独立\t独立\t独立\t-\n适合场景\t非海量高可靠\t非海量高可靠\t海量大规模分布式系统\t日志等海量数据流\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br"),t("span",{staticClass:"line-number"},[a._v("15")]),t("br"),t("span",{staticClass:"line-number"},[a._v("16")]),t("br"),t("span",{staticClass:"line-number"},[a._v("17")]),t("br"),t("span",{staticClass:"line-number"},[a._v("18")]),t("br"),t("span",{staticClass:"line-number"},[a._v("19")]),t("br"),t("span",{staticClass:"line-number"},[a._v("20")]),t("br")])]),t("ul",[t("li",[a._v("Kafka重平衡机制？")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("答：动态感知生产和消费者的上下线，自动调整\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("ul",[t("li",[a._v("HashMap在JDK7和JDK8中的区别？")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("答：jdk7：数组+链表； jdk8: 数组+链表+红黑色\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("ul",[t("li",[a._v("go协程间通信？")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("答：管道channel、消息队列\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("ul",[t("li",[a._v("TCP/IP协议？")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("答：三次握手，四次挥手\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("ul",[t("li",[a._v("ShardingSphere？范围查询？")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("答：ShardingSphere是关系型数据库分库分布表中间件，目的是解决数据量大而造成数据库查询性能问题\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"_3月2日"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3月2日"}},[a._v("#")]),a._v(" 3月2日")]),a._v(" "),t("ul",[t("li",[a._v("负责模块介绍？")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("答：项目背景、需求、技术架构、遇到的问题、解决方案及结果\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);